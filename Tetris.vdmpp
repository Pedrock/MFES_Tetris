class Tetris
/*
	A classe Tetris representa o o modelo principal do jogo, onde se encontram definidas as operações
	 permitidas ao jogador.
*/

types


values


instance variables

-- Grelha do jogo
public gameGrid : GameGrid := new GameGrid();

-- Tetraminó em jogo
public tetramino : Tetramino := getRandomTetramino();

inv not hasCollision(tetramino.rotationsList(tetramino.rotation), gameGrid.grid, tetramino.x, tetramino.y);

operations

--Início do jogo
public begin : () ==> ()
begin() == (
	gameGrid := new GameGrid();
	tetramino := getRandomTetramino();
);

public tick : () ==> ()
tick() == (
	if not tetraminoHasCollisionInCoords(tetramino.x, tetramino.y - 1) then
		tetramino.y := tetramino.y - 1
	else (
		gameGrid.addTetramino(tetramino);
		tetramino := getRandomTetramino()
	)
);

public moveRight : () ==> ()
moveRight() == (
	if not tetraminoHasCollisionInCoords(tetramino.x + 1, tetramino.y) then
		tetramino.x := tetramino.x + 1;
);

public moveLeft : () ==> ()
moveLeft() == (
	if not tetraminoHasCollisionInCoords(tetramino.x - 1, tetramino.y) then
		tetramino.x := tetramino.x - 1;
);

public rotateRight : () ==> ()
rotateRight() == tryRotation(tetramino.getRightRotation());

public rotateLeft : () ==> ()
rotateLeft() == tryRotation(tetramino.getLeftRotation());

private tryRotation : Tetramino`RotationResult ==> ()
tryRotation(result) ==  (
	if not hasCollision(result.matrix, gameGrid.grid, tetramino.x, tetramino.y) then
			tetramino.rotation := result.rotation
		else if not hasCollision(result.matrix, gameGrid.grid, tetramino.x + 1, tetramino.y) then
		atomic ( -- Right wall kick (http://tetris.wikia.com/wiki/Wall_kick)
			tetramino.rotation := result.rotation;
			tetramino.x := tetramino.x + 1
		)
		else if not hasCollision(result.matrix, gameGrid.grid, tetramino.x - 1, tetramino.y) then
		atomic ( -- Left wall kick
			tetramino.rotation := result.rotation;
			tetramino.x := tetramino.x - 1
		)
);

--Escolha aleatória do tetraminó em jogo
public getRandomTetramino : () ==> Tetramino
getRandomTetramino() == return new Tetramino(MATH`rand(Tetramino`getNumber()-1)+1);
	
-- Verifica se o tetraminó em jogo tem colisão nas coordenadas (x, y)
public tetraminoHasCollisionInCoords : int*int ==> bool
tetraminoHasCollisionInCoords(x, y) == (
	for all tetraminoY in set inds tetramino.getCurrentMatrix() do (
		let line = tetramino.getCurrentMatrix()(tetraminoY) in (
			for all tetraminoX in set inds line do (
				let cellX = x - 1 + tetraminoX, cellY = y + 1 - tetraminoY in (
				if (line(tetraminoX) <> <Blank>) then (
					if cellX < 1 or cellX > GameGrid`WIDTH
						  or cellY < 1 or cellY > GameGrid`HEIGHT
							or gameGrid.getCell(cellX, cellY) <> <Blank>
						then return true
					)
				)
			)
		)
	);
	return false
)
post 
RESULT = hasCollision(tetramino.rotationsList(tetramino.rotation), gameGrid.grid, x, y);


functions

public hasCollision : Tetramino`TetraminoMatrix * GameGrid`Grid * int * int -> bool
hasCollision(tetraminoMatrix, gameGrid, x, y) == (
	exists tetraminoY in set inds tetraminoMatrix &
		exists tetraminoX in set inds tetraminoMatrix(tetraminoY)
			& tetraminoMatrix(tetraminoY)(tetraminoX) <> <Blank> 
			and let cellX = x - 1 + tetraminoX, cellY = y + 1 - tetraminoY in (
						cellX < 1
						or cellX > GameGrid`WIDTH
						or cellY < 1
						or cellY > GameGrid`HEIGHT
						or gameGrid(cellY)(cellX) <> <Blank>
			)
);



end Tetris